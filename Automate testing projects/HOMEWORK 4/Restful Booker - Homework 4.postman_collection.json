{
	"info": {
		"_postman_id": "e03b4a84-9a11-4f25-a31b-185bf5b62291",
		"name": "Restful Booker - Homework 4",
		"description": "## Overview\nThe Restful Booker API is a sample API based on hotel bookings. The API contains endpoints to demonstrate CRUD operations. The source code can be obtained from https://github.com/mwinteringham/restful-booker\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32306763"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Auth Token Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*",
									"var authSchema = {",
									"  \"properties\": {",
									"    \"token\": {",
									"        \"description\": \"The auth token returned\",",
									"        \"type\": \"string\",",
									"    }",
									"  }",
									"};",
									"",
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(response, authSchema)).to.be.true;",
									"});",
									"*/",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Get auth token"
					},
					"response": []
				},
				{
					"name": "Create new Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var imeNaKorisnik = pm.iterationData.get(\"firstname\");",
									"var prezimeNaKorisnik = pm.iterationData.get(\"lastname\");",
									"var dopolnitelniPotrebi = pm.iterationData.get(\"additionalneeds\");",
									"",
									"",
									"pm.collectionVariables.set(\"BookingID\", jsonData.bookingid);",
									"// pm.collectionVariables.set(\"firstName\", jsonData.booking.firstname);",
									"// pm.collectionVariables.set(\"lastName\", jsonData.booking.lastname);",
									"// pm.collectionVariables.set(\"totalprice\", jsonData.booking.totalprice);",
									"// pm.collectionVariables.set(\"additionalneeds\", jsonData.booking.additionalneeds);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Check firstname of new Booking\", function () {",
									"    pm.expect(jsonData.booking.firstname).to.eql(jsonData.booking.firstname);",
									"    console.log(jsonData.booking.firstname);",
									"});",
									"",
									"pm.test(\"Check lastName of new Booking\", function() {",
									"    pm.expect(jsonData.booking.lastname).to.eql(jsonData.booking.lastname);",
									"    console.log(jsonData.booking.lastname);",
									"});",
									"",
									"pm.test(\"Check totalprice of new Booking\", function() {",
									"    pm.expect(jsonData.booking.totalprice).to.eql(jsonData.booking.totalprice);",
									"     console.log(jsonData.booking.totalprice);",
									"});",
									"pm.test(\"Check additionalNeeds of new Booking\", function() {",
									"    pm.expect(jsonData.booking.additionalneeds).to.eql(jsonData.booking.additionalneeds);",
									"     console.log(jsonData.booking.additionalneeds);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var imeNaKorisnik = pm.iterationData.get(\"firstname\");\r",
									"var prezimeNaKorisnik = pm.iterationData.get(\"lastname\");\r",
									"var dopolnitelniPotrebi = pm.iterationData.get(\"additionalneeds\");\r",
									"\r",
									"pm.collectionVariables.set('firstName', imeNaKorisnik)\r",
									"pm.collectionVariables.set('lastName', prezimeNaKorisnik)\r",
									"pm.collectionVariables.set('additionalneeds', dopolnitelniPotrebi)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomPrice}},\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"var imeNaKorisnik = pm.collectionVariables.get('firstname');",
									"var prezimeNaKorisnik = pm.collectionVariables.get('lastname');",
									"var krajnaCena = pm.collectionVariables.get('totalprice');",
									"var dopolnitelniPotrebi = pm.collectionVariables.get('additionalneeds');",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Verify FirstName\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstnamee).to.eql(imeNaKorisnik);",
									"    ",
									"});",
									"",
									"pm.test('Verify LastName', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastnamee).to.eql(prezimeNaKorisnik);",
									"  //  console.log(prezimeNaKorisnik);",
									"})",
									"",
									"pm.test('Verify TotalPrice', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.exist;",
									"   // console.log(krajnaCena);",
									"})",
									"",
									"pm.test('Verify Additional Needs', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.exist;",
									"   // console.log(dopolnitelniPotrebi);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking/{{BookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{BookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (partial)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.collectionVariables.get('BookingID')",
									"pm.collectionVariables.set('BookingID', jsonData.bookingid)",
									"pm.collectionVariables.set('firstName', jsonData.firstname)",
									"pm.collectionVariables.set('lastName', jsonData.lastname)",
									"pm.collectionVariables.set('totalprice', jsonData.totalprice)",
									"pm.collectionVariables.set('additionalneeds', jsonData.additionalneeds)",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Check updated BookingID of Booking\", function () {",
									"    pm.expect(jsonData.bookingid).to.eql(pm.collectionVariables.get('BookingID'));",
									"    console.log(jsonData.bookingid);",
									"});",
									"",
									"pm.test('Check updated firstname of Booking', function () {",
									"    pm.expect(jsonData.firstname).to.exist;",
									"    console.log(jsonData.firstname);",
									"})",
									"",
									"pm.test('Check updated lastName of Booking', function () {",
									"    pm.expect(jsonData.lastname).to.exist;",
									"    console.log(jsonData.lastname);",
									"})",
									"",
									"pm.test('Check updated totalprice of Booking', function () {",
									"    pm.expect(jsonData.totalprice).to.exist;",
									"    console.log(jsonData.totalprice);",
									"})",
									"",
									"pm.test('Check updated additionalNeeds of Booking', function () {",
									"    pm.expect(jsonData.additionalneeds).to.exist;",
									"    console.log(jsonData.additionalneeds);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{$randomFirstName}}\",\n    \"lastname\": \"{{$randomLastName}}\",\n    \"totalprice\": 246,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2013-02-23\",\n        \"checkout\": \"2014-10-23\"\n    },\n    \"additionalneeds\": \"Lunch\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{BookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{BookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"//var jsonData = pm.response.json();",
									"",
									"// var imeNaKorisnik = pm.collectionVariables.get(\"firstname\")",
									"//  pm.collectionVariables.get(\"lastname\")",
									"// pm.collectionVariables.get(\"totalprice\")",
									"//  pm.collectionVariables.get(\"additionalneeds\")",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Change First Name is Betty\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.eql(\"Betty\");",
									"    });",
									"",
									"pm.test(\"Change LastName is Boop\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastname).to.eql(\"Boop\");",
									"});",
									"",
									"pm.test(\"Verify TotalPrice\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.totalprice).to.eql(111);",
									"});",
									"",
									"pm.test(\"Verify additionalNeeds\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.additionalneeds).to.eql(\"Breakfast\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking/{{BookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{BookingID}}"
							],
							"query": [
								{
									"key": "firstname",
									"value": "{{$randomFirstName}}",
									"disabled": true
								},
								{
									"key": "lastname",
									"value": "{{$randomLastName}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{authToken}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/booking/3814",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"3814"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful  request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/ping",
							"host": [
								"{{url}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Test for status code 404 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{BookingID}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{BookingID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password123",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://restful-booker.herokuapp.com",
			"type": "string"
		},
		{
			"key": "bookingID",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "BookingID",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "totalprice",
			"value": ""
		},
		{
			"key": "additionalneeds",
			"value": ""
		}
	]
}